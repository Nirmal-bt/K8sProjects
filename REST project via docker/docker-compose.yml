version: '3.8'

services:
  mysql:
    image: mysql:8.0
    container_name: sqlcontainer
    environment:
      MYSQL_ROOT_PASSWORD: nirmalbt
      MYSQL_DATABASE: testbookdb
      MYSQL_USER: admin
      MYSQL_PASSWORD: root
    ports:
      - "3306:3306"

    networks:
      - app-network

  zookeeper:
    image: wurstmeister/zookeeper:latest
    ports:
      - "2181:2181"
    networks:
      - app-network
    restart: unless-stopped



  kafka:
    image: wurstmeister/kafka:latest
    ports:
      - "9092:9092"

    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181

    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped
    depends_on:
      - zookeeper
    networks:
      - app-network
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: rest_app
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/testbookdb
      SPRING_DATASOURCE_USERNAME: admin
      SPRING_DATASOURCE_PASSWORD: root
      SPRING_KAFKA_CONSUMER_BOOTSTRAP_SERVERS: kafka:9093
      SPRING_KAFKA_PRODUCER_BOOTSTRAP_SERVERS: kafka:9093

    ports:
      - "8080:8080"
    depends_on:
      mysql:`
        condition: service_started
      kafka:
        condition: service_started
      zookeeper:
        condition: service_started
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
